using System.Collections.Generic;
using System.Linq;
using FluentAssertions;
using TE.ComponentLibrary.ComponentLibrary.ControllerAdaptors;
using TE.ComponentLibrary.ComponentLibrary.Domain;
using TE.ComponentLibrary.ComponentLibrary.Domain.DataTypes;
using Xunit;

namespace TE.ComponentLibrary.ComponentLibrary.UnitTests.ControllerAdaptersTests
{
    public class MaterialDocumentDtoAdaptorTests
    {
        [Fact]
        public void FromMaterial_ShouldReturnMaterialDocumentDto_WhenMaterialWithStaticFileAndColumnNameIsPassed()
        {
            const string materialCode = "materialCode";
            const string shortDescription = "shortDesciption";
            const string staticFileId = "staticFileId";
            const string staticFileName = "staticFileName";
            var staticFile = new StaticFile(staticFileId,staticFileName);
            var material = GetMaterial(materialCode, shortDescription, staticFile);
            const string columnKey = Image;

            var result = MaterialDocumentDtoAdaptor.FromMaterial(material,columnKey);

            result.MaterialCode.Should().Be(materialCode);
            result.ShortDescription.Should().Be(shortDescription);
            result.DocumentDtos.First().Id.Should().Be(staticFileId);
            result.DocumentDtos.First().Name.Should().Be(staticFileName);
        }

        private IMaterial GetMaterial(string materialCode, string shortDescription, StaticFile staticFile)
        {
            return new Material
            {
                Group = Clay,
                Headers = new List<IHeaderData>
                {
                    new HeaderData(General, general)
                    {
                        Columns = new List<IColumnData>
                        {
                            new ColumnData(Image, Image, staticFile),
                            new ColumnData(MaterialCode, material_code, materialCode),
                            new ColumnData(ShortDescription, short_description, shortDescription)
                        }
                    }
                },
                ComponentDefinition = GetMaterialDefinition()
            };
        }

        private IComponentDefinition GetMaterialDefinition()
        {
            return new MaterialDefinition(Clay)
            {
                Name = Clay,
                Headers = new List<IHeaderDefinition>()
                {
                    new HeaderDefinition(General, general, new List<IColumnDefinition>
                    {
                        new ColumnDefinition(Image, Image, new StaticFileDataType()),
                        new ColumnDefinition(MaterialCode, material_code, new AutogeneratedDataType(MaterialCode)),
                        new ColumnDefinition(ShortDescription, short_description, new StringDataType())
                    })
                }
            };
        }

        private const string MaterialCode = "Material Code";
        private const string Clay = "Clay";
        private const string material_code = "material_code";
        private const string General = "General";
        private const string Image = "Image";
        private const string ShortDescription = "Short Description";
        private const string short_description = "short_description";
        private const string general = "general";

    }
}
